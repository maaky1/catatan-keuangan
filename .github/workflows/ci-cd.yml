name: CI/CD Pipeline

# Event yang memicu workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job pertama: Build dan Test
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout kode dari repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Setup JDK 8 menggunakan Temurin
      - name: Setup JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: temurin

      # 3. Build Maven Project
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # 4. Run Unit Tests
#      - name: Run Unit Tests
#        run: mvn test

  # Job kedua: Build dan Push Docker Image
#  docker_build_and_push:
#    needs: build_and_test  # Job ini hanya berjalan jika build_and_test sukses
#    runs-on: ubuntu-latest
#
#    steps:
#      # 1. Checkout kode dari repository
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      # 2. Login ke Docker Hub
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      # 3. Build Docker Image
#      - name: Build Docker Image
#        run: docker build -t my-dockerhub-user/my-app:${{ github.sha }} .
#
#      # 4. Push Docker Image ke Docker Hub
#      - name: Push Docker Image
#        run: docker push my-dockerhub-user/my-app:${{ github.sha }}
#
#  # Job ketiga: Deploy ke Server
#  deploy_to_server:
#    needs: docker_build_and_push  # Job ini hanya berjalan jika docker_build_and_push sukses
#    runs-on: ubuntu-latest
#
#    steps:
#      # 1. Deploy Docker Image ke Server
#      - name: Deploy to Server
#        run: |
#          ssh -i ~/.ssh/id_rsa user@your-server-ip <<EOF
#          docker pull my-dockerhub-user/my-app:${{ github.sha }}
#          docker stop my-app || true
#          docker rm my-app || true
#          docker run -d --name my-app -p 8080:8080 my-dockerhub-user/my-app:${{ github.sha }}
#          EOF
